<!DOCTYPE html>
<html lang="en">

<head>
  <title>Openskies Flight Launchpad</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <link rel="icon" href="/assets/img/favicon.png">
  <link href='https://fonts.googleapis.com/css?family=Karla' rel='stylesheet' type='text/css'>
  <link href='https://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css'>

  <link type="text/css" rel="stylesheet" href="/assets/css/bootstrap.min.css">
  <link type="text/css" rel="stylesheet" href="/assets/css/bootstrap-icons.css">
  <link rel="stylesheet" type="text/css" href="/assets/css/base.css">

  <link rel="stylesheet" href="/assets/css/launchpad/leaflet.css">
  <link rel="stylesheet" href="/assets/css/launchpad/launchpad-style.css">
  <link rel="stylesheet" href="/assets/js/humane/flatty.css">

</head>

<body>

  <%- include('navigation') -%>

    <div class="container">

      <div class="row">
        <div class="col-12">
          <br><br>

          <h3>Submit a flight plan</h3>
          <p>Use this form to submit a Flight Plan into the UTM system.</p>

          <br>
          <div class="row">
            <div class="col-12">
              <% if (Object.keys(errors).length !==0) { %>
                <ul class="list-group list-group-light">
                  <% Object.values(errors).forEach(error=> { %>
                    <li class="list-group-item px-3 border-0 rounded-3 list-group-item-danger mb-2" role="alert">
                      <%= error.msg %>
                    </li>
                    <% }) %>
                </ul>
                <% } %>
            </div>
          </div>
          <div class="row">
            <div class="col-12">
              <form action="/launchpad/submit-declaration" method="post">
                <div class="form-group <%= errors.message ? 'form-field-invalid' : '' %>">
                  <label for="geojson_upload_control"><mark>Paste Flightplan GeoJSON</mark></label>
                  <textarea class="form-control" onblur="this.value=remove_spaces(this.value);"
                    onchange="update_geo_json()" name="geojson_upload_control" rows="4" cols="50"
                    class="form-control-file" id="geojson_upload_control"></textarea>
                  <small id="uploadhelp" class="form-text text-muted">Paste your flight plan as a GeoJSON, once you
                    paste the map on the bottom is updated. You can also create a GeoJSON via <a
                      href="https://geojson.io" target="_blank">geojson.io</a></small>
                  <% if (errors.geojson_upload_control) { %>
                    <div class="error">
                      <%= errors.geojson_upload_control.msg %>
                    </div>
                    <% } %>
                      <br><br>
                      <label for="operator_name"><mark>Operator Name</mark></label>
                      <% if (operators=="" ) { %>
                        <input class="form-control" id="operator_name" placeholder="e.g. Aerobridge Drones F521"
                          type="text" name="operator_name" />
                        <% } else {%>
                          <select id="operator_name">
                            <% const o=operators.split(','); o.forEach(function (item, index) { %>
                              <option value="<%- item %>">
                                <%- item %>
                              </option>

                              <% }); %>
                          </select>
                          <% } %>
                            <br>
                            <input type="hidden" id="submitted_by" name="submitted_by" value="<%= user.email %>">
                            <label for="altitude_agl"><mark>Altitude (mts. agl)</mark></label>
                            <input class="form-control" id="altitude_agl" placeholder="e.g. 100" type="text"
                              name="altitude_agl" />
                            <br>

                            <label for="op_date"><mark>Operation date</mark></label>
                            <select id="op_date" class="form-control" name="op_date">
                            </select>
                            <br>
                            <div class="row">
                              <div class="col-5">

                                <label for="op_start"><mark>Intended Start</mark></label>
                                <select id="op_start" class="form-control" name="op_start">
                                </select>
                                <br>
                              </div>
    
                              <div class="col-5">
                                <label for="op_end"><mark>Intended End</mark></label>
                                <select id="op_end" class="form-control" name="op_end">
                                </select>
                                <br>
                              </div>
                            </div>

                            <label for="operation_type"><mark>Operation Type</mark></label>
                            <select class="form-control" name="operation_type" id="operation_type" class="form-control">
                              <option selected>Choose...</option>
                              <option value="1">VLOS</option>
                              <option value="2" selected>BVLOS</option>
                              <option value="3" selected>Crewed</option>
                            </select>
                            <br>
                </div>
                <input class="btn btn-primary" type="submit" value="Submit Flight Plan" />
              </form>
            </div>
          </div>
        </div>
      </div>
      <br>
      <div class="row">
        <div class="col-12">
          <h6>Flight Plan Preview</h6>
          <div id="map"></div>
        </div>
      </div>
    </div>

    <script type="application/javascript" src="/assets/js/jquery/jquery.min.js" charset="utf-8"></script>
    <script type="application/javascript" src="/assets/js/launchpad/moment.min.js" charset="utf-8"></script>
    <script type="application/javascript" src="/assets/js/bootstrap/bootstrap.bundle.min.js" charset="utf-8"></script>
    <script type="application/javascript" src="/assets/js/launchpad/leaflet.js" charset="utf-8"></script>

    <script type="text/javascript">


      var dateRange = document.getElementById('op_date'),
        monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug",
          "Sep", "Oct", "Nov", "Dec"
        ];
      
      for (var day = 0; day < 7; day++) {
        var date = new Date();
        date.setDate(date.getDate() + day);
        var dateAsString = [date.getDate(), monthNames[date.getMonth()],
        date.getFullYear()
        ].join(' ');
        if (day == 0) {
          dateRange.options[dateRange.options.length] = new
            Option(dateAsString, date.toISOString(), true, true);
        } else {
          dateRange.options[dateRange.options.length] = new
            Option(dateAsString, date.toISOString());
        }
      }

      function populate(selector) {
        var operation_control = document.getElementById(selector);
        // var select = $(selector);
        var hours, minutes, ampm;
        for (var i = 420; i <= 1320; i += 15) {
          hours = Math.floor(i / 60);
          minutes = i % 60;
          if (minutes < 10) {
            minutes = '0' + minutes; // adding leading zero
          }
          ampm = hours % 24 < 12 ? 'AM' : 'PM';
          hours = hours % 12;
          if (hours === 0) {
            hours = 12;
          }
          operation_control.options[operation_control.options.length] = new
            Option(hours + ':' + minutes + ' ' + ampm, i);
        }

      }
      populate('op_start'); // use selector for your select
      populate('op_end');

      function end_date_update(e) {
        // console.log(e.target[e.target.selectedIndex].value + " selected");
        const selected_start = parseInt(e.target[e.target.selectedIndex].value);
        var operation_end = document.getElementById("op_end");
        for (var i = 0; i < operation_end.length; i++) {
          if (operation_end.options[i].value <= selected_start) {
            operation_end.options[i].disabled = true;
            operation_end.options[i].selected = false;
          } else {
            operation_end.options[i].disabled = false;
          }

        }
      }
      // function start_date_update(e) {
      //   console.log(e.target[e.target.selectedIndex].value + " selected");
      //   const selected_end = e.target[e.target.selectedIndex].value;
      //   var operation_start = document.getElementById("op-start");
      //   for (var i = 0; i < operation_start.length; i++) {
      //     if (operation_start.options[i].value >= selected_end) {
      //       operation_start.options[i].disabled = false;
      //     } else {
      //       operation_start.options[i].disabled = true;
      //       operation_start.options[i].selected = false;
      //     }

      //   }
      // }
      const op_start_control = document.getElementById('op_start');
      op_start_control.addEventListener("change", end_date_update);
      // const op_end_control = document.getElementById('op-end');
      // op_end_control.addEventListener("change", start_date_update);
      // Creates a leaflet map binded to an html <div> with id "map"
      // setView will set the initial map view to the location at coordinates
      // 13 represents the initial zoom level with higher values being more zoomed in
      var map = L.map('map', { attributionControl: false }).setView([43.659752, -79.378161], 2);

      // Adds the basemap tiles to your web map
      // Additional providers are available at: https://leaflet-extras.github.io/leaflet-providers/preview/
      L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> &copy; <a href="https://carto.com/attributions">CARTO</a>',
        subdomains: 'abcd',
        maxZoom: 21,
        dragging: false,
      }).addTo(map);

      var geojson_feature_layer = L.featureGroup().addTo(map);

      function remove_spaces(string) {
        return string.replace(/\n/g, "").replace(/ /g, '');
      }

      function update_geo_json() {
        var geojson_control = document.getElementById('geojson_upload_control');
        var geo_json = geojson_control.value;
        try {
          geojson_feature_layer.clearLayers();
          let layer = L.geoJSON(JSON.parse(geo_json), {
            "color": "#ff7800",
            "weight": 5,
            "opacity": 0.65
          });
          geojson_feature_layer.addLayer(layer);
          map.fitBounds(geojson_feature_layer.getBounds());
        } catch (err) {
          console.log(err);
          geojson_feature_layer.clearLayers();
        }

      }
    </script>
    <%- include('footer') -%>