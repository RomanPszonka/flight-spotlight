
<!DOCTYPE html>
<html lang="en">

<head>
    <title>Openskies Flight Noticeboard Map</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <link rel="icon" href="/assets/img/favicon.png">
    <link href='https://fonts.googleapis.com/css?family=Karla' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css'>
    <link type="text/css" rel="stylesheet" href="/assets/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="/assets/css/base.css">
    <link rel="stylesheet" href="/assets/css/launchpad/launchpad-style.css">
    <link rel="stylesheet" href="/assets/css/launchpad/leaflet.css">
    <link type="text/css" rel="stylesheet" href="/assets/css/bootstrap-icons.css">
    <link rel="stylesheet" type="text/css" href="/assets/css/base.css">    
    <link rel="stylesheet" href="/assets/css/vis-timeline/vis-timeline-graph2d.min.css">
    <link rel="stylesheet" href="/assets/js/humane/flatty.css">

</head>
<body>
    <%- include('navigation') -%>
        <div class="container-fluid information">
            <div class="row">
                <div class="col-sm-4 col-md-4 main">

                        <div class="pt-2 pb-2">
                            <h6><select id="query_date" class="form-control" name="query_date">
                                <option value="" disabled selected>Select a date..</option>
                            </select></h6>
                        </div>
                        <div class="schedule-button pt-1 pb-1">
                            <button type="button" onclick="get_flight_declarations()" id="search-timeframe"
                                class="btn btn-primary">Show Schedule</button>
                        </div>

                        <div class="d-none loading-spinner" id="spinner-cont"><br>
                            <img src="/assets/img/spinner.gif" height="30px">
                        </div>
                        <p>&nbsp;</p>
                        <div class="d-none" id="flight-declarations">
                            <button id="show-flight-declarations" type="button" class="btn btn-link">Get Flight
                                Declarations</button>
                        </div>
                        <ul class="list-group list-group-flush">
                            <%if (data.successful !='NA' ) { %>
                                <% const declarations_len=data.results.length; var op_types={1:'VLOS', 2: 'BVLOS', '3':'CREWED' }; var
                                    op_state={'0':'Accepted', '1' : 'Activated' , '2' : 'Contingent' , '3'
                                    : 'Nonconforming' , '4' : 'Completed' }; if (declarations_len !==0) { for (var j=0;
                                    j < declarations_len; j++ ) { var cur_declaration=data.results[j]; %>
                                    <li class="list-group-item">
                                        <h6><a href="#"
                                                onclick="highlight_flight_declaration('<%- cur_declaration.id %>')">
                                                <%= cur_declaration.originating_party %>
                                            </a>&nbsp;<small class="text-muted">
                                                <%= op_types[cur_declaration.type_of_operation] %>
                                                <%if (user.role=='operator' ) { %>
                                                    <%if (cur_declaration.is_approved =='1'){ %>&nbsp;&nbsp;<i class="bi bi-check-circle"></i> <% } else {%>&nbsp;&nbsp;<i class="bi bi-x-square"></i><%}%>
                                                <% } %>
                                            </small>
                                        </h6>
                                    </li>
                                    <% } } else { %>
                                        <p>No flight declarations found, please select a broader timeframe.</p>
                                        <% } } else { %>
                                            <p>No flight declarations found, please select a timeframe.</p>
                                            <% } %>
                        </ul>
                        <br>
                        <%if (data.successful !='NA' ) { %>
                            <p>Showing page <%= data.page %> of <%= data.pages%>. <a href="/noticeboard">See as a <i
                                                class='bi bi-table'></i> table</a></p>
                            <% if (data.links) { const pagination_links=data.links; %>
                                <ul class="pagination">
                                    <% if (data.links.previous) { const previous_page=data.page -1; let
                                        previous_detail=pagination_links.previous; const previous_url=new
                                        URL(previous_detail); const urlParams=new URLSearchParams(previous_url.search);
                                        const s_date=urlParams.get('start_date'); const
                                        e_date=urlParams.get('end_date'); const page=urlParams.get('page'); %>

                                        <li class="page-item"><a class="page-link"
                                                href='<%= "/noticeboard?start_date=" + s_date +"&end_date=" + e_date + "&page=" + previous_page %>''>Previous</a></li>
                                    <% } %>
                                       
                                    <% if (data.links.next) { 
                                        const next_page = data.page +1;
                                        let next_detail = pagination_links.next;      
                                        const next_url = new URL(next_detail);
                                        const urlParams = new URLSearchParams(next_url.search);
                                        const s_date = urlParams.get(' start_date'); const
                                                e_date=urlParams.get('end_date'); const page=urlParams.get('page'); %>

                                        <li class="page-item"><a class="page-link"
                                                href='<%= "/noticeboard?start_date=" + s_date +"&end_date=" + e_date + "&page=" + next_page %>''>Next</a></li>
                                    <% } %>
                                </ul>                            
                            <% } } %>
               
            </div>  
            <div class="col-sm-8 col-md-8 sidebar">
                <div id="map_full"></div>
            </div>
        </div>

        <%- include('flight-timeline') -%>
        </div>
    <%- include('footer') -%>
    <script type="text/javascript" src="/assets/js/jquery/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/js/humane/humane.min.js"></script>
    <script type="text/javascript" src="/assets/js/bootstrap/bootstrap.bundle.min.js"></script>
    <script type="application/javascript" src="/assets/js/launchpad/leaflet.js" charset="utf-8"></script>
    <script type="text/javascript" src="/assets/js/vis-timeline/vis-timeline-graph2d.min.js"></script>
    <script type="text/javascript" src="/assets/js/vis-timeline/timeline-render.js"></script>

    <script type="text/javascript">
        var map = L.map('map_full', { attributionControl: false }).setView([43.659752, -79.378161], 2);

        // Adds the basemap tiles to your web map
        // Additional providers are available at: https://leaflet-extras.github.io/leaflet-providers/preview/
        L.tileLayer('https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}{r}.png', {
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a> &copy; <a href="https://carto.com/attributions">CARTO</a>',
        subdomains: 'abcd',
        maxZoom: 21,
        dragging: false,
        }).addTo(map);
        var geojson_feature_layer = L.featureGroup().addTo(map);
    </script>

    <script type="text/javascript">
        var path_done;
        var all_flight_declarations =  <%- JSON.stringify(data.results) %>;
      
        function end_date_update(e) {
                
                const selected_date_y = new Date(e.target.value);
                const selected_date_t = new Date(e.target.value);
                const yesterdays_date = selected_date_y.setDate(selected_date_y.getDate() - 1);
                const tomorrows_date = selected_date_t.setDate(selected_date_t.getDate() + 1);               

                const tmp_y = new Date(yesterdays_date);
                const tmp_t = new Date(tomorrows_date);
                
                start_date = tmp_y.toISOString().split('T')[0];
                end_date =  tmp_t.toISOString().split('T')[0];

            }


        let dateRange = document.getElementById('query_date'),
        monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug","Sep", "Oct", "Nov", "Dec"];
        dateRange.addEventListener("change", end_date_update);
        
        for (var day = 0; day < 7; day++) {
            var date = new Date();
            date.setDate(date.getDate() + day);
            var dateAsString = [date.getDate(), monthNames[date.getMonth()],
            date.getFullYear()
            ].join(' ');
            if (day == 0) {
            dateRange.options[dateRange.options.length] = new
                Option(dateAsString, date.toISOString(), false, false);
            } else {
            dateRange.options[dateRange.options.length] = new
                Option(dateAsString, date.toISOString());
            }
        }
        var declaration_layer_lookup ={};
        const map_querystring = window.location.search;
        const date_params = new URLSearchParams(map_querystring);

        let start_date = date_params.get('start_date');
        let end_date = date_params.get('end_date');

        if (!start_date) {
            start_date = 0;
        }

        if (!end_date) {
            end_date = 0;
        }


        let user = <%- JSON.stringify(userProfile) %>;
        // var data = <% JSON.stringify(data) %>;
        $('#datepicker').on('changeDate', (event) => {
            // save checkin date
            let d = event.date;
            var datestring = d.getFullYear() + "-" + ("0" + (d.getMonth() + 1)).slice(-2) + "-" + ("0" + (d
                .getDate())).slice(-2);
            if (event.target.id == 'start') {
                start_date = datestring;
            } else if (event.target.id == 'end') {
                end_date = datestring;
            }
        });

        const s_parse = Date.parse(start_date);
        const timeline_start = new Date(s_parse);
        const user_name = '<%= user.email %>';
        var orignating_party_popup;
        var start_time_popup;
        var end_time_popup;
        var declaration_id;
        function get_flight_declarations() {
            let url = '?start_date=' + start_date + '&end_date=' + end_date;
            window.location.href = url;
        }

        if (start_date == 0 || end_date == 0) { } else {
            
            var gj_style = {
                "color": "#ff7800",
                "weight": 5,
                "opacity": 0.65
            };
            function onEachFeature(feature, layer) {
                layer.bindPopup(orignating_party_popup +'<br><b>'+  start_time_popup + '</b> - <b>' +  end_time_popup + '</b>');   
                L.stamp(layer);
                declaration_layer_lookup[declaration_id] = layer._leaflet_id;             
            }
            const all_flight_declarations_length = all_flight_declarations.length;
            for (var x =0; x< all_flight_declarations.length;x++) {
                const cur_declaration = all_flight_declarations[x];
                var cur_declaration_fc = cur_declaration.flight_declaration_raw_geojson;
                orignating_party_popup = cur_declaration.originating_party;    
                const s_time = new Date(cur_declaration.start_datetime);  
                const e_time = new Date(cur_declaration.end_datetime);  
                declaration_id = cur_declaration.id;
                start_time_popup = s_time.toISOString().substr(11, 8);
                end_time_popup = e_time.toISOString().substr(11, 8);
                const gj_layer = L.geoJSON(cur_declaration_fc , {'style':gj_style, onEachFeature: onEachFeature});
                
                geojson_feature_layer.addLayer(gj_layer);

            }
            if (all_flight_declarations_length >0){
                map.fitBounds(geojson_feature_layer.getBounds());
            }

        }

    /// Timeline specific 
    if (start_date == 0 || end_date == 0) { } else {
        if (all_flight_declarations.length > 0){
        render_timeline(all_flight_declarations);
        }
    }
    </script>

</body>

</html>